Lyte.Component.register("lyte-autocomplete",{_template:'<template tag-name="lyte-autocomplete">   \n      <lyte-dropdown lt-prop-set-pos="{{ltPropSetPos}}" lt-prop-type="{{ltPropDropType}}" lt-prop-yield="true" lt-prop-freeze="{{ltPropFreeze}}" lt-prop-callout="{{ltPropCallout}}" lt-prop-show="{{ltPropShow}}" lt-prop-position="{{ltPropPosition}}" lt-prop-hover="{{ltPropHover}}" lt-prop-disabled="{{ltPropDisabled}}" lt-prop-boundary="{{ltPropBoundary}}" lt-prop-tabindex="{{ltPropTabindex}}" lt-prop-animate="{{ltPropAnimate}}" on-option-selected="{{method(\'valSet\')}}" on-show="{{method(\'show\')}}" on-hide="{{method(\'hide\')}}" on-before-show="{{method(\'beforeShow\')}}" on-before-hide="{{method(\'beforeHide\')}}" on-add="{{method(\'add\')}}" on-remove="{{method(\'remove\')}}" on-position-changed="{{\'positionChanged\'}}" on-scroll="{{method(\'scroll\')}}" lt-prop-selected="{{lbind(ltPropSelected)}}">\n        <template is="registerYield" yield-name="yield">\n              <lyte-drop-button onkeyup="{{action(\'keyup\', event)}}">\n                     <lyte-input lt-prop-maxlength="{{ltPropMaxlength}}" lt-prop-auto-update="{{ltPropAutoUpdate}}" on-value-change="{{method(\'valuechange\')}}" lt-prop-tab-index="{{ltPropTabIndex}}" lt-prop-id="{{ltPropId}}" lt-prop-wrapper-style="{{ltPropWrapperStyle}}" lt-prop-class="{{ltPropClass}}" lt-prop-autofocus="{{ltPropAutofocus}}" lt-prop-autocomplete="{{ltPropAutocomplete}}" lt-prop-type="{{ltPropType}}" lt-prop-name="{{ltPropName}}" lt-prop-placeholder="{{ltPropPlaceholder}}" lt-prop-value="{{lbind(ltPropValue)}}" lt-prop-width="100%" lt-prop-height="{{ltPropHeight}}" lt-prop-style="{{ltPropStyle}}" lt-prop-appearance="{{ltPropAppearance}}" lt-prop-direction="vertical" lt-prop-disabled="{{ltPropDisabled}}" lt-prop-readonly="{{ltPropReadonly}}" lt-prop-pattern="{{ltPropPattern}}" rows="{{ltPropRows}}" cols="{{ltPropCols}}" title="{{ltPropInputTitle}}" lt-prop-text-area-resize="{{ltPropTextAreaResize}}" lt-prop-input-title="{{ltPropInputTitle}}" on-focus="{{method(\'focus\')}}" on-blur="{{method(\'blurEvent\')}}"></lyte-input>\n                     <template is="if" value="{{expHandlers(ltPropType,\'==\',\'search\')}}"><template case="true">   \n                         <div class="closeIconWrapper" onclick="{{action(\'resetValue\', event)}}" style="{{if(ltPropValue, \'display: block;\',\'display: none;\')}}">\n                            <span class="closeIcon"></span>\n                        </div>\n                        <span class="iconSeparator" style="{{if(ltPropValue, \'display: block;\',\'display: none;\')}}"></span>\n                     </template></template>\n              </lyte-drop-button> \n          <template is="if" value="{{expHandlers(ltPropYield,\'==\',false)}}"><template case="true">\n            <lyte-drop-box class="{{ltPropDropdownClass}} lyteautocompleteDropdown" id="{{ltPropDropdownId}}">\n              <lyte-drop-body>\n              <template is="for" items="{{ltPropContent}}" item="list" index="indexVal"><template is="if" value="{{lyteUiOptGroupCheck(list)}}"><template case="true">\n                      <lyte-drop-group elemorder="{{indexVal}}">\n                         <lyte-drop-label>{{lyteUiReturnOnlyKey(list)}}</lyte-drop-label>\n                            <template is="for" items="{{lyteUiReturnOnlyValue(list)}}" item="list1" index="indexVal1"><template is="if" value="{{expHandlers(lyteUiIsObject(list1),\'==\',false)}}"><template case="true">\n                                             <lyte-drop-item grporder="{{indexVal}}" elemorder="{{indexVal1}}" data-value="{{list1}}">\n                                                    <lyte-autocomplete-label keywords="{{list1}}">{{list1}}</lyte-autocomplete-label>\n                                              </lyte-drop-item>\n                                        </template><template case="false">\n                                            <lyte-drop-item grporder="{{indexVal}}" elemorder="{{indexVal1}}" data-value="{{list1[ltPropLabel]}}" class="{{list1.class}}">\n                                                <lyte-autocomplete-label keywords="{{list1[ltPropKeyWords]}}">{{list1[ltPropLabel]}}</lyte-autocomplete-label>\n                                                    <template is="if" value="{{list1[ltPropDescription]}}"><template case="true">\n                                                        <lyte-autocomplete-description><span class="lyteAutoSeparator">,</span> {{list1[ltPropDescription]}}</lyte-autocomplete-description>\n                                                    </template></template>\n                                            </lyte-drop-item>\n                                    </template></template></template>\n                    </lyte-drop-group>\n                    </template><template case="false"><template is="if" value="{{expHandlers(lyteUiIsObject(list),\'==\',false)}}"><template case="true">\n                                       <lyte-drop-item elemorder="{{indexVal}}" data-value="{{list}}">\n                                              <lyte-autocomplete-label keywords="{{list}}">{{list}}</lyte-autocomplete-label>\n                                        </lyte-drop-item>\n                                </template><template case="false">\n                                      <lyte-drop-item elemorder="{{indexVal}}" data-value="{{list[ltPropLabel]}}" class="{{list1.class}}">\n                                          <lyte-autocomplete-label keywords="{{list[ltPropKeyWords]}}">{{list[ltPropLabel]}}</lyte-autocomplete-label>\n                                              <template is="if" value="{{list[ltPropDescription]}}"><template case="true">\n                                                  <lyte-autocomplete-description><span class="lyteAutoSeparator">,</span> {{list[ltPropDescription]}}</lyte-autocomplete-description>\n                                              </template></template>\n                                      </lyte-drop-item>\n                                </template></template></template></template></template>     \n               </lyte-drop-body>       \n            </lyte-drop-box>\n          </template><template case="false">\n                  <lyte-yield yield-name="yield"></lyte-yield>\n            </template></template>\n        </template>\n      </lyte-dropdown>     \n</template>',_dynamicNodes:[{type:"attr",position:[1]},{type:"registerYield",position:[1,1],dynamicNodes:[{type:"attr",position:[1]},{type:"attr",position:[1,1]},{type:"componentDynamic",position:[1,1]},{type:"attr",position:[1,3]},{type:"if",position:[1,3],cases:{true:{dynamicNodes:[{type:"attr",position:[1],attr:{style:{name:"style",helperInfo:{name:"if",args:["ltPropValue","'display: block;'","'display: none;'"]}}}},{type:"attr",position:[3],attr:{style:{name:"style",helperInfo:{name:"if",args:["ltPropValue","'display: block;'","'display: none;'"]}}}}]}},default:{}},{type:"componentDynamic",position:[1]},{type:"attr",position:[3]},{type:"if",position:[3],cases:{true:{dynamicNodes:[{type:"attr",position:[1]},{type:"attr",position:[1,1,1]},{type:"for",position:[1,1,1],dynamicNodes:[{type:"attr",position:[0]},{type:"if",position:[0],cases:{true:{dynamicNodes:[{type:"attr",position:[1]},{type:"text",position:[1,1,0]},{type:"componentDynamic",position:[1,1]},{type:"attr",position:[1,3]},{type:"for",position:[1,3],dynamicNodes:[{type:"attr",position:[0]},{type:"if",position:[0],cases:{true:{dynamicNodes:[{type:"attr",position:[1]},{type:"attr",position:[1,1]},{type:"text",position:[1,1,0]},{type:"componentDynamic",position:[1,1]},{type:"componentDynamic",position:[1]}]},false:{dynamicNodes:[{type:"attr",position:[1]},{type:"attr",position:[1,1]},{type:"text",position:[1,1,0]},{type:"componentDynamic",position:[1,1]},{type:"attr",position:[1,3]},{type:"if",position:[1,3],cases:{true:{dynamicNodes:[{type:"text",position:[1,2]},{type:"componentDynamic",position:[1]}]}},default:{}},{type:"componentDynamic",position:[1]}]}},default:{}}]},{type:"componentDynamic",position:[1]}]},false:{dynamicNodes:[{type:"attr",position:[0]},{type:"if",position:[0],cases:{true:{dynamicNodes:[{type:"attr",position:[1]},{type:"attr",position:[1,1]},{type:"text",position:[1,1,0]},{type:"componentDynamic",position:[1,1]},{type:"componentDynamic",position:[1]}]},false:{dynamicNodes:[{type:"attr",position:[1]},{type:"attr",position:[1,1]},{type:"text",position:[1,1,0]},{type:"componentDynamic",position:[1,1]},{type:"attr",position:[1,3]},{type:"if",position:[1,3],cases:{true:{dynamicNodes:[{type:"text",position:[1,2]},{type:"componentDynamic",position:[1]}]}},default:{}},{type:"componentDynamic",position:[1]}]}},default:{}}]}},default:{}}]},{type:"componentDynamic",position:[1,1]},{type:"componentDynamic",position:[1]}]},false:{dynamicNodes:[{type:"insertYield",position:[1]}]}},default:{}}]},{type:"componentDynamic",position:[1]}],_observedAttributes:["ltPropAutocomplete","ltPropPlaceholder","ltPropAutofocus","ltPropMaxlength","ltPropReadonly","ltPropId","ltPropClass","ltPropType","ltPropName","ltPropWidth","ltPropValue","ltPropContent","ltPropLabel","ltPropDescription","ltPropAppearance","ltPropDirection","ltPropExternalSearch","ltPropYield","ltPropHeight","ltPropHighlight","ltPropHighlightClass","ltPropKeyWords","ltPropMinLength","ltPropErrorClass","ltPropDropdownWidth","ltPropDropdownHeight","ltPropDropdownClass","ltPropDropdownId","ltPropMethod","ltPropWrapperStyle","ltPropTabIndex","ltPropTabindex","ltPropFreeze","ltPropCallout","ltPropShow","ltPropDisabled","ltPropHover","ltPropBoundary","ltPropPosition","ltPropDropType","ltPropSetPos","ltPropPattern","ltPropAutoUpdate","ltPropValueSet","ltPropPreventInsideClick","ltPropExtSearchOpen","ltPropInputTitle","ltPropErrorMessage","ltPropErrorClass","ltPropAnimate","ltPropSelected","ltPropRows","ltPropCols","ltPropTextAreaResize","timeout","optGroup","autocompleteFlag"],init:function(){this.$node.toggle=function(){this.$node.querySelector("lyte-dropdown").toggle(arguments[0],arguments[1])}.bind(this),this.getMethods("beforeRender")&&this.executeMethod("beforeRender",this.$node)},didDestroy:function(){delete this.autocompleteComp,delete this.input,delete this.dropdown,delete this.dropbody,delete this.$node.toggle,delete this.$node.setValue,clearTimeout(this.data.timeout),["focus","blur","click","select"].forEach(function(t){delete this.$node[t]}.bind(this))},didConnect:function(){var t=document.createElement("DIV");t.classList.add("lyteautocompleteError"),t.style.display="none",this.autocompleteComp=t,this.data.ltPropErrorMessage&&(t.innerText=this.data.ltPropErrorMessage),this.data.ltPropErrorClass&&t.classList.add(this.data.ltPropErrorClass),this.dropdown=this.$node.querySelector("lyte-dropdown"),this.dropbody=this.dropdown.childComp?this.component.childComp:this.dropdown.querySelector("lyte-drop-box"),this.dropbody.appendChild(t),this.$node.setValue=function(t){t=void 0!=t?t:"",this.$node.querySelector("lyte-input").ltProp("value",t),this.pressFunc.call(this,t,{})}.bind(this),["focus","blur","click","select"].forEach(function(t){this.$node[t]=function(e){this.$node.querySelector("lyte-input")[t](e)}.bind(this)}.bind(this)),this.getMethods("afterRender")&&this.executeMethod("afterRender",this.$node)},errObs:function(t){"ltPropErrorMessage"==t.item?this.autocompleteComp.innerText=t.newValue:(this.autocompleteComp.classList.add(t.newValue),this.autocompleteComp.classList.remove(t.oldValue))}.observes("ltPropErrorMessage","ltPropErrorClass"),typeObs:function(){var t=this.getData("ltPropType");if("textarea"==t)this.input=this.$node.querySelector("textarea");else{if(this.input=this.$node.querySelector("input"),"search"==t)return void this.$node.classList.add("searchPresent");this.$node.classList.remove("searchPresent")}}.observes("ltPropType").on("didConnect"),arrayFrom:function(t){for(var e=[],o=0;o<t.length;o++)e.push(t[o]);return e.slice()},optGroupObs:function(){setTimeout(this.optGroup.bind(this,!0),0)}.observes("ltPropContent"),optGroup:function(t){(this.dropbody&&!this.dropbody.classList.contains("lyteDropdownHidden")&&this.input.value.length||this.data.ltPropExternalSearch)&&(t&&(this._prevext=!0),this.contentFiltering.call(this,this.input.value)),this.data.ltPropAnimate&&this.data.ltPropExternalSearch&&(this.dropbody.querySelector("lyte-drop-body").style.removeProperty("height"),delete this.dropdown.component._prevent)},classObs:function(){if(this.data.ltPropYield){arguments[0]&&this.dropbody.classList.remove(arguments[0].oldValue);var t=this.data.ltPropDropdownClass;t&&this.dropbody.classList.add(t)}}.observes("ltPropDropdownClass").on("didConnect"),heigthSetObs:function(){this.heigthSet.call(this)}.observes("ltPropDropdownHeight").on("didConnect"),heigthSet:function(){var t=this.data.ltPropDropdownHeight;t&&(this.dropbody.querySelector("lyte-drop-body").style.maxHeight=t)},widthSetObs:function(){this.widthSet.call(this)}.observes("ltPropDropdownWidth").on("didConnect"),widthSet:function(){var t=this.data.ltPropDropdownWidth;t&&(this.dropbody.querySelector("lyte-drop-body").style.width=t)},data:function(){return{ltPropAutocomplete:Lyte.attr("string",{default:"off"}),ltPropPlaceholder:Lyte.attr("string",{default:""}),ltPropAutofocus:Lyte.attr("boolean",{default:!1}),ltPropMaxlength:Lyte.attr("number",{default:25}),ltPropReadonly:Lyte.attr("boolean",{default:!1}),ltPropId:Lyte.attr("string",{default:"inputId"}),ltPropClass:Lyte.attr("string",{default:""}),ltPropType:Lyte.attr("string",{default:"text"}),ltPropName:Lyte.attr("string",{default:""}),ltPropWidth:Lyte.attr("string",{default:"100%"}),ltPropValue:Lyte.attr("string",{default:""}),ltPropContent:Lyte.attr("array",{default:[]}),ltPropLabel:Lyte.attr("string",{default:""}),ltPropDescription:Lyte.attr("string",{default:""}),ltPropAppearance:Lyte.attr("string",{default:"flat"}),ltPropDirection:Lyte.attr("string",{default:"vertical"}),ltPropExternalSearch:Lyte.attr("boolean",{default:!1}),ltPropYield:Lyte.attr("boolean",{default:!1}),ltPropHeight:Lyte.attr("string",{default:""}),ltPropHighlight:Lyte.attr("boolean",{default:!1}),ltPropHighlightClass:Lyte.attr("string",{default:"lyteautocompleteHighlight"}),ltPropKeyWords:Lyte.attr("string",{default:""}),ltPropMinLength:Lyte.attr("number",{default:1}),ltPropErrorClass:Lyte.attr("string",{default:"lyteautocompleteError"}),ltPropDropdownWidth:Lyte.attr("string",{default:"auto"}),ltPropDropdownHeight:Lyte.attr("string",{default:"300px"}),ltPropDropdownClass:Lyte.attr("string",{default:""}),ltPropDropdownId:Lyte.attr("string",{default:"lyteAutocomplete"}),ltPropMethod:Lyte.attr("string",{default:"contains"}),ltPropWrapperStyle:Lyte.attr("string",{default:""}),ltPropTabIndex:Lyte.attr("string",{default:"0"}),ltPropTabindex:Lyte.attr("string",{default:"-1"}),ltPropFreeze:Lyte.attr("boolean",{default:!1}),ltPropCallout:Lyte.attr("boolean",{default:!1}),ltPropShow:Lyte.attr("boolean",{default:!1}),ltPropDisabled:Lyte.attr("boolean",{default:!1}),ltPropHover:Lyte.attr("boolean",{default:!1}),ltPropBoundary:Lyte.attr("object",{default:{}}),ltPropPosition:Lyte.attr("string",{default:"down"}),ltPropDropType:Lyte.attr("string",{default:"default"}),ltPropSetPos:Lyte.attr("boolean",{default:!1}),ltPropPattern:Lyte.attr("string",{default:".+"}),ltPropAutoUpdate:Lyte.attr("boolean",{default:!0}),ltPropValueSet:Lyte.attr("boolean",{default:!0}),ltPropPreventInsideClick:Lyte.attr("boolean",{default:!1}),ltPropExtSearchOpen:Lyte.attr("boolean",{default:!1}),ltPropInputTitle:Lyte.attr("string",{default:""}),ltPropErrorMessage:Lyte.attr("string",{default:""}),ltPropErrorClass:Lyte.attr("string",{default:""}),ltPropAnimate:Lyte.attr("boolean",{default:!1}),ltPropSelected:Lyte.attr("string",{default:""}),ltPropRows:Lyte.attr("number",{default:void 0}),ltPropCols:Lyte.attr("number",{default:void 0}),ltPropTextAreaResize:Lyte.attr("object",{default:{vertical:!0,horizontal:!0}}),timeout:Lyte.attr("number",{default:void 0}),optGroup:Lyte.attr("boolean",{default:!1}),autocompleteFlag:Lyte.attr("boolean",{default:!0})}},templateTrim:function(t){var e=(t=(t=t||"").trim()).indexOf("<template"),o=t.indexOf("</template>"),l=[];for(l.push(e);-1!=e;)(e=t.split("<template",l.length+1).join("<template").length)>o?(e=(t=t.slice(0,l.pop())+t.slice(o+11,t.length)).indexOf("<template"),o=t.indexOf("</template>")):l.push(e);return t},highlightText:function(t,e){for(var o=new RegExp("("+_lyteUiUtils.escape(e)+")","gi"),l=/(?!>)([^><]+)(?=<)/gi,r=0;r<t.length;r++){var i=t[r].querySelector("lyte-autocomplete-label"),a=t[r].querySelector("div.lyteAutoComplete");a||((a=document.createElement("div")).classList.add("lyteAutoComplete"),t[r].insertBefore(a,t[r].firstChild)),i.style.display="none",i.children.length?a.innerHTML=this.autoHighlight.call(this,this.templateTrim(i.innerHTML),o,l):a.innerHTML=i.textContent.replace(o,"<span class ="+this.getData("ltPropHighlightClass")+">$1</span>")}},autoHighlight:function(t,e,o){return t.replace(o,function(){return arguments[0].replace(e,"<span class ="+this.getData("ltPropHighlightClass")+">$1</span>")}.bind(this))},errorMessage:function(t){var e=this.autocompleteComp;t?(e.style.display="block",e.style.width||(e.style.width=window.getComputedStyle(this.$node).getPropertyValue("width"))):(e.style.display="none",this.data.ltPropErrorMessage||(e.innerHTML=""))},actions:{resetValue:function(t){this.$node.setValue(""),this.$node.focus()},keyup:function(t){if(37!=t.keyCode&&13!=t.keyCode&&38!=t.keyCode&&39!=t.keyCode&&40!=t.keyCode&&27!=t.keyCode){var e=this.input.value;void 0!=this.data.timeout&&clearTimeout(this.data.timeout),(e.length>=this.getData("ltPropMinLength")||8==t.keyCode||91==t.keyCode||17==t.keyCode)&&13!=t.keyCode&&this.setData("timeout",setTimeout(function(){this.pressFunc.call(this,e,t)}.bind(this),100))}},input:function(t){}},methods:{valSet:function(t,e){for(var o=(t||window.event).target;o&&"LYTE-DROP-ITEM"!=o.tagName&&"BODY"!=o.tagName;)o=o.parentNode;o&&"LYTE-DROP-ITEM"==o.tagName&&(e=o.querySelector("lyte-autocomplete-label").textContent);if(e){this.getData("ltPropValueSet")&&this.$node.ltProp("value",e.trim());var l=this.getData("ltPropContent");if(this.getMethods("onSelect")){var r;if(this.getData("ltPropYield"))r=o.getAttribute("data-value");else{l=this.getData("ltPropContent");for(var i=this.arrayFrom.call(this,this.dropbody.querySelector("lyte-drop-body").children),a=0;a<i.length;a++)-1==["LYTE-DROP-GROUP","LYTE-DROP-ITEM"].indexOf(i[a].tagName)&&(Lyte.arrayUtils(i,"removeAt",a),a--);if("LYTE-DROP-GROUP"==o.parentElement.tagName){var n=l[i.indexOf(o.parentElement)];r=n[Object.keys(n)[0]][this.arrayFrom.call(this,o.parentElement.querySelectorAll("lyte-drop-item")).indexOf(o)]}else r=l[i.indexOf(o)]}this.executeMethod("onSelect",r,t,this.$node)}}},show:function(){this.optGroupHide.call(this,!0),this.getMethods("onShow")&&this.executeMethod("onShow",arguments[0],arguments[1])},hide:function(){this.getMethods("onHide")&&this.executeMethod("onHide",arguments[0],arguments[1])},beforeShow:function(){var t;return!(this.input&&this.input.value.length<this.data.ltPropMinLength)&&((!this.getMethods("onBeforeShow")||0!=(t=this.executeMethod("onBeforeShow",arguments[0],arguments[1])))&&(t&&t.then?(t.then(function(){setTimeout(this.pressFunc.bind(this),0,this.input.value,{})}.bind(this)),t):void(this._bymanual||setTimeout(this.pressFunc.bind(this),0,this.input.value,{}))))},beforeHide:function(){return!(this.getData("ltPropPreventInsideClick")&&arguments[0]&&27!=arguments[0].keyCode&&this.$node.contains(arguments[0].target))&&(this.getMethods("onBeforeHide")?this.executeMethod("onBeforeHide",arguments[0],arguments[1]):void 0)},add:function(){this.getMethods("onAdd")&&this.executeMethod("onAdd",arguments[0],arguments[1],arguments[2],arguments[3])},remove:function(){this.getMethods("onRemove")&&this.executeMethod("onRemove",arguments[0],arguments[1],arguments[2],arguments[3])},positionChanged:function(){this.getMethods("onPositionChanged")&&this.executeMethod("onPositionChanged",arguments[0],arguments[1])},scroll:function(){this.getMethods("onScroll")&&this.executeMethod("onScroll",arguments[0],arguments[1])},valuechange:function(t){this.getMethods("onValueChange")&&this.executeMethod("onValueChange",t,this.$node)},blurEvent:function(t){this.getMethods("onBlur")&&this.executeMethod("onBlur",t,this.$node)},focus:function(t,e){this.getMethods("onFocus")&&this.executeMethod("onFocus",t,this.$node)}},filteringArray:function(t,e,o,l){var r=this.getData("ltPropMethod"),i=[];if(o.length)for(var a=0;a<t.length;a++){var n=!1,p=t[a].trim().toLowerCase();o=o.toLowerCase();switch(r){case"contains":n=p.indexOf(o)>=0;break;case"startsWith":n=0==p.indexOf(o);break;case"endsWith":-1!=(s=p.lastIndexOf(o))&&(n=s+o.length==p.length)}n&&i.push(e[a])}else i=e;if(!this.getMethods("onSearch")||0!=this.executeMethod("onSearch",i,this.autocompleteComp,this.$node,o,l)){for(a=0;a<t.length;a++){n=!1,p=t[a].trim().toLowerCase(),o=o.toLowerCase();switch(r){case"contains":n=p.indexOf(o)>=0;break;case"startsWith":n=0==p.indexOf(o);break;case"endsWith":var s;-1!=(s=p.lastIndexOf(o))&&(n=s+o.length==p.length)}e[a].classList[n?"remove":"add"]("lyteSearchHidden")}this.optGroupHide.call(this),this.errorMessage.call(this,!i.length),i.length&&this.data.ltPropHighlight&&this.highlightText.call(this,e,o)}},optGroupHide:function(t){var e=this.dropbody.querySelectorAll("lyte-drop-item:not(.lyteSearchHidden):not(.lyteDropdownActive)"),o=this.dropbody.querySelector("lyte-drop-item.lyteDropdownSelection");if(!t)for(var l=this.dropbody.querySelectorAll("lyte-drop-group"),r=0;r<l.length;r++)l[r].querySelectorAll("lyte-drop-item.lyteSearchHidden").length==l[r].querySelectorAll("lyte-drop-item").length?l[r].style.display="none":l[r].style.display="block";$L.fastdom.measure(function(){for(var t,l=0;l<e.length;l++)if(e[l].offsetParent&&!e[l].classList.contains("lyteDropdown-disabled")){t=e[l];break}$L.fastdom.mutate(function(){t&&o!=t&&(o&&o.classList.remove("lyteDropdownSelection"),t.classList.add("lyteDropdownSelection"))}.bind(this))}.bind(this))},contentFiltering:function(t,e){var o=this.dropdown,l=[],r=[],i=(e=e||{},this.dropbody);if(!(i.classList.contains("lyteDropdownHidden")&&t.length>=this.data.ltPropMinLength||!i.classList.contains("lyteDropdownHidden")&&t.length<this.data.ltPropMinLength)||(this._bymanual=!0,o.toggle(),delete this._bymanual,!i.classList.contains("lyteDropdownHidden"))){r=i.querySelectorAll("lyte-drop-item:not(.lyteDropdownActive)");for(var a=0;a<r.length;a++){var n=r[a].querySelector("lyte-autocomplete-label"),p=n.getAttribute("keywords");if(p)try{p=JSON.parse(p).join(" ")}catch(t){}l.push(p||n.textContent.trim())}this.filteringArray.call(this,l,r,t,e)}},pressFunc:function(t,e){if(this.data.ltPropExternalSearch)if(t.length>=this.data.ltPropMinLength||!e.target){if(e.type&&this.dropbody.classList.contains("lyteDropdownHidden")&&this.data.ltPropExtSearchOpen&&(this.dropdown.toggle(),this.dropbody.classList.contains("lyteDropdownHidden")))return;!this._prevext&&this.getMethods("onExtSearch")&&this.executeMethod("onExtSearch",t,this.$node,e),delete this._prevext}else this.dropbody.classList.contains("lyteDropdownHidden")||this.dropdown.toggle();else this.contentFiltering.call(this,t,e)}});